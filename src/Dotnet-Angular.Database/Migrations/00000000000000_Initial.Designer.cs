// <auto-generated />
using Dotnet_Angular.Database;
using Dotnet_Angular.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Dotnet_Angular.Database.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("00000000000000_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Dotnet_Angular.Domain.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("User", "User");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Status = 1
                        });
                });

            modelBuilder.Entity("Dotnet_Angular.Domain.User", b =>
                {
                    b.OwnsOne("Dotnet_Angular.Domain.Email", "Email", b1 =>
                        {
                            b1.Property<long>("UserId")
                                .HasColumnType("bigint");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(300)
                                .HasColumnType("nvarchar(300)")
                                .HasColumnName("Email");

                            b1.HasKey("UserId");

                            b1.HasIndex("Value")
                                .IsUnique()
                                .HasFilter("[Email] IS NOT NULL");

                            b1.ToTable("User", "User");

                            b1.WithOwner()
                                .HasForeignKey("UserId");

                            b1.HasData(
                                new
                                {
                                    UserId = 1L,
                                    Value = "amirhossein.salehi@hotmail.com"
                                });
                        });

                    b.OwnsOne("Dotnet_Angular.Domain.Name", "Name", b1 =>
                        {
                            b1.Property<long>("UserId")
                                .HasColumnType("bigint");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("FirstName");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("nvarchar(200)")
                                .HasColumnName("LastName");

                            b1.HasKey("UserId");

                            b1.ToTable("User", "User");

                            b1.WithOwner()
                                .HasForeignKey("UserId");

                            b1.HasData(
                                new
                                {
                                    UserId = 1L,
                                    FirstName = "Amir Hossein",
                                    LastName = "Salehi"
                                });
                        });
                    
                    b.OwnsOne("Dotnet_Angular.Domain.Place", "Place", b1 =>
                    {
                        b1.Property<long>("UserId")
                            .HasColumnType("bigint");
                        
                        b1.Property<string>("Place")
                            .IsRequired()
                            .HasMaxLength(200)
                            .HasColumnType("nvarchar(200)")
                            .HasColumnName("Place");

                        b1.HasKey("UserId");

                        b1.ToTable("User", "User");

                        b1.WithOwner()
                            .HasForeignKey("UserId");

                        b1.HasData(
                            new
                            {
                                UserId = 1L,
                                Value = "Iran"
                            });
                    });

                    b.Navigation("Email");

                    b.Navigation("Name");
                    
                    b.Navigation("Place");
                });
#pragma warning restore 612, 618
        }
    }
}
